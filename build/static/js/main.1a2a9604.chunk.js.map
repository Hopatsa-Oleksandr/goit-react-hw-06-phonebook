{"version":3,"sources":["components/contacts/contactsItem/ContactsItem.module.css","components/Phonebook.module.css","components/form/Form.module.css","components/section/Section.module.css","components/findContact/Find.module.css","components/natification/Natification.js","redux/constants/contactsConstants.js","components/form/Form.jsx","redux/actions/contactsActions.js","components/header/Header.js","components/section/Section.jsx","components/contacts/contactsItem/ContactsItem.jsx","components/contacts/ContactsList.jsx","components/findContact/FindContact.jsx","components/Phonebook.js","components/App.js","redux/reducers/contactsReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","Div","styled","div","Empty","Used","ADDNEWCONTACT","DELETECONTACT","SETFILTER","SETALERT","GETALLCONTACTS","Form","state","name","number","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","localStorage","getItem","this","getAllContacts","JSON","parse","showUsedAlert","showEmptyAlert","setTimeout","setAlert","onSubmit","type","className","styles","input","placeholder","pattern","title","onChange","button","Component","mapDispatchToProps","contact","payload","id","uuidv4","contacts","connect","reducerContacts","Header","style","textAlign","Section","children","container","ContactsItem","onRemove","item","span","text","onClick","deleteContact","filter","toLowerCase","includes","onHandleDeleteContact","map","dispatch","setFilter","CSSTransition","in","appear","classNames","timeout","unmountOnExit","length","App","initialState","contactsReducer","action","setItem","stringify","some","rootReducer","combineReducers","store","createStore","composeWithDevTools","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a2a9604.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__2jgji\",\"span\":\"ContactsItem_span__8S6wp\",\"text\":\"ContactsItem_text__3sQWe\",\"button\":\"ContactsItem_button__2nGzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Phonebook_enter__1ldfn\",\"enterActive\":\"Phonebook_enterActive__3xCQI\",\"exit\":\"Phonebook_exit__VpCVj\",\"exitActive\":\"Phonebook_exitActive__aVz03\",\"appear\":\"Phonebook_appear__1ImQi\",\"appearActive\":\"Phonebook_appearActive__2pNZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__1HOYc\",\"button\":\"Form_button__hS_vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3PI1A\",\"appear\":\"Section_appear__1l020\",\"appearActive\":\"Section_appearActive__haChP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Find_input__1W8Sj\",\"button\":\"Find_button__1ruTR\"};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n    width: 300px;\n    height: 80px;\n    background-color: tomato;\n    position: absolute;\n    border-radius: 5px;\n    top: 0;\n    right: 0;\n    opacity: 0.8;\n    p {\n        font-size: 25px;\n        padding: 10px;\n        text-align: center;\n    }\n`;\n\nexport const Empty = () => {\n    return (\n        <Div>\n            <p>ВСЕ ПОЛЯ ДОЛЖНЫ БЫТЬ ЗАПОЛНЕНЫ!</p>\n        </Div>\n    );\n};\nexport const Used = () => {\n    return (\n        <Div>\n            <p>УЖЕ ИСПОЛЬЗУЕТСЯ!</p>\n        </Div>\n    );\n};\n","const ADDNEWCONTACT = '@contact/addNewContact';\nconst DELETECONTACT = '@contact/deleteContact';\nconst SETFILTER = '@contact/setFilter';\nconst SETALERT = '@contact/setAlert,';\nconst GETALLCONTACTS = '@contact/getAllContacts';\n\nexport { ADDNEWCONTACT, DELETECONTACT, SETFILTER, SETALERT, GETALLCONTACTS };\n","import React, { Component } from 'react';\nimport styles from './Form.module.css';\nimport { connect } from 'react-redux';\nimport {\n    addNewContact,\n    getAllContacts,\n    setAlert,\n} from '../../redux/actions/contactsActions';\n\nclass Form extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    componentDidMount() {\n        if (localStorage.getItem('contacts')) {\n            this.props.getAllContacts(\n                JSON.parse(localStorage.getItem('contacts')),\n            );\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.showUsedAlert || this.props.showEmptyAlert) {\n            setTimeout(() => this.props.setAlert(), 2500);\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onAddContact({\n            name: this.state.name,\n            number: this.state.number,\n        });\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Имя\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={styles.input}\n                        placeholder=\"Введите имя\"\n                        value={this.state.name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        onChange={this.handleInputChange}\n                    />\n                </label>\n\n                <label>\n                    Номер\n                    <input\n                        type=\"text\"\n                        name=\"number\"\n                        className={styles.input}\n                        placeholder=\"Введите номер\"\n                        value={this.state.number}\n                        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                        onChange={this.handleInputChange}\n                    />\n                </label>\n\n                <button className={styles.button} type=\"submit\">\n                    Добавить\n                </button>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    showUsedAlert: state.reducerContacts.showUsedAlert,\n    showEmptyAlert: state.reducerContacts.showEmptyAlert,\n});\nconst mapDispatchToProps = {\n    onAddContact: addNewContact,\n    setAlert,\n    getAllContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { v4 as uuidv4 } from 'uuid';\n\nimport {\n    ADDNEWCONTACT,\n    DELETECONTACT,\n    SETFILTER,\n    SETALERT,\n    GETALLCONTACTS,\n} from '../constants/contactsConstants';\n\nexport const addNewContact = contact => ({\n    type: ADDNEWCONTACT,\n    payload: { ...contact, id: uuidv4() },\n});\n\nexport const deleteContact = id => ({\n    type: DELETECONTACT,\n    payload: id,\n});\n\nexport const setFilter = value => ({\n    type: SETFILTER,\n    payload: value,\n});\n\nexport const setAlert = () => ({\n    type: SETALERT,\n});\n\nexport const getAllContacts = contacts => ({\n    type: GETALLCONTACTS,\n    payload: contacts,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ title }) => {\n    const styles = {\n        textAlign: 'center',\n    };\n\n    return (\n        <header style={styles}>\n            <h1>{title}</h1>\n        </header>\n    );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport style from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children, title }) => {\n    return (\n        <section className={style.container}>\n            {title && <h2>{title}</h2>}\n            {children}\n        </section>\n    );\n};\n\nexport default Section;\n\nSection.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport styles from './ContactsItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number, onRemove }) => (\n    <li className={styles.item}>\n        <span className={styles.span}>√</span>\n        <p className={styles.text}>{name}</p>\n        <p className={styles.text}>{number}</p>\n\n        <button\n            id={id}\n            type=\"button\"\n            className={styles.button}\n            onClick={onRemove}\n        ></button>\n    </li>\n);\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ContactsItem from './contactsItem/ContactsItem';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/actions/contactsActions';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n    const onHandleDeleteContact = e => {\n        const { id } = e.target;\n        deleteContact(id);\n    };\n    return (\n        <div>\n            {contacts.map(({ name, number, id }) => (\n                <ContactsItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    id={id}\n                    onRemove={onHandleDeleteContact}\n                />\n            ))}\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    contacts: state.reducerContacts.contacts.filter(contact =>\n        contact.name\n            .toLowerCase()\n            .includes(state.reducerContacts.filter.toLowerCase()),\n    ),\n});\n\nconst mapDispatchToProps = {\n    deleteContact: deleteContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired),\n    deleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from './Find.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setFilter } from '../../redux/actions/contactsActions';\n\nconst FindContact = ({ filter, setFilter }) => {\n    const onHandleChange = e => {\n        const { value } = e.target;\n        setFilter(value);\n    };\n    return (\n        <>\n            <input\n                type=\"text\"\n                className={styles.input}\n                placeholder=\"Поиск контактов по имени\"\n                value={filter}\n                onChange={onHandleChange}\n            />\n        </>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        filter: state.reducerContacts.filter,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        setFilter: id => {\n            dispatch(setFilter(id));\n        },\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContact);\n\nFindContact.propTypes = {\n    filter: PropTypes.string.isRequired,\n    setFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './Phonebook.module.css';\nimport { Empty, Used } from './natification/Natification';\n\nimport Form from './form/Form';\nimport Header from './header/Header';\nimport Section from './section/Section';\nimport ContactsList from './contacts/ContactsList';\nimport FindContact from './findContact/FindContact';\n\nimport { connect } from 'react-redux';\n\nconst Phonebook = ({ contacts, showUsedAlert, showEmptyAlert }) => {\n    return (\n        <>\n            <CSSTransition\n                in={true}\n                appear={true}\n                classNames={styles}\n                timeout={500}\n                unmountOnExit\n            >\n                <Header title=\"Телефонная книга\" />\n            </CSSTransition>\n\n            <Section title=\"Добавтье Ваш контакт\">\n                <Form />\n            </Section>\n\n            {contacts.length > 0 && (\n                <Section title=\"Поиск контактов\">\n                    <FindContact />\n                </Section>\n            )}\n\n            {contacts.length > 0 && (\n                <Section title=\"Мои контакты\">\n                    <ContactsList />\n                </Section>\n            )}\n\n            <CSSTransition\n                in={showEmptyAlert}\n                timeout={250}\n                classNames={styles}\n                unmountOnExit\n            >\n                <Empty />\n            </CSSTransition>\n\n            <CSSTransition\n                in={showUsedAlert}\n                timeout={250}\n                classNames={styles}\n                unmountOnExit\n            >\n                <Used />\n            </CSSTransition>\n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    contacts: state.reducerContacts.contacts,\n    showUsedAlert: state.reducerContacts.showUsedAlert,\n    showEmptyAlert: state.reducerContacts.showEmptyAlert,\n});\nexport default connect(mapStateToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from './Phonebook';\n\nconst App = () => {\n    return (\n        <>\n            <Phonebook />\n        </>\n    );\n};\n\nexport default App;\n","import {\n    ADDNEWCONTACT,\n    DELETECONTACT,\n    SETFILTER,\n    SETALERT,\n    GETALLCONTACTS,\n} from '../constants/contactsConstants';\n\nconst initialState = {\n    contacts: [\n        // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n        // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n        // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n        // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    showEmptyAlert: false,\n    showUsedAlert: false,\n};\n\nconst contactsReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n        case ADDNEWCONTACT:\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify([...state.contacts, action.payload]),\n            );\n            if (\n                state.contacts.some(\n                    contact => contact.name === action.payload.name,\n                )\n            ) {\n                return { ...state, showUsedAlert: !state.showUsedAlert };\n            } else if (!action.payload.name.length) {\n                return { ...state, showEmptyAlert: !state.showEmptyAlert };\n            } else\n                return {\n                    ...state,\n                    contacts: [...state.contacts, action.payload],\n                };\n\n        case DELETECONTACT:\n            return {\n                ...state,\n                contacts: [\n                    ...state.contacts.filter(\n                        contact => contact.id !== action.payload,\n                    ),\n                ],\n            };\n\n        case SETFILTER:\n            return {\n                ...state,\n                filter: action.payload,\n            };\n\n        case SETALERT:\n            return {\n                ...state,\n                showEmptyAlert: false,\n                showUsedAlert: false,\n            };\n        case GETALLCONTACTS:\n            return {\n                ...state,\n                contacts: [...action.payload],\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default contactsReducer;\n","import { combineReducers } from 'redux';\nimport contactsReducer from './contactsReducer';\n\nconst rootReducer = combineReducers({\n    reducerContacts: contactsReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport App from './components/App';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nconsole.log('store :', store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}